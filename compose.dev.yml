name: aircraft-dev
version: '3.9'

services:
  nginx:
    restart: on-failure
    build:
      context: .
      dockerfile: docker/dev/nginx.dockerfile
    image: aircraft-dev-nginx
    depends_on:
      django:
        condition: service_started
    container_name: nginx
    environment:
      NGINX_SERVER_NAME: localhost
    ports:
      - 80:80
      - 443:443
    networks:
      - aircraft-dev-network
    extra_hosts:
      - 'host.docker.internal:host-gateway'

  django:
    restart: on-failure
    build:
      context: .
      dockerfile: docker/dev/django.dockerfile
    image: aircraft-dev-django
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    container_name: django
    command: sh -c "python3 manage.py makemigrations &&
      python3 manage.py migrate &&
      python3 manage.py spectacular --color --file schema.yml &&
      python3 manage.py runserver 0.0.0.0:8000"
    networks:
      - aircraft-dev-network
    volumes:
      - ./server/:/server
    env_file:
      - ./config/.env.dev

  postgres:
    restart: on-failure
    image: postgres:13
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d aircraft_db"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    container_name: postgres
    networks:
      - aircraft-dev-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - ./config/.env.dev

volumes:
  postgres-data:

networks:
  aircraft-dev-network:
    driver: bridge